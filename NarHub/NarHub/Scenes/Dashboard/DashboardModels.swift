//
//  DashboardModels.swift
//  Nar_Hub
//
//  Created by Sevar Jafarli on 23.01.24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import NarHubNetworkKit
import RealmSwift

enum Dashboard {
    // MARK: Use cases
    
    enum Load {
        struct Request { }
        struct Response { }
        struct ViewModel { }
    }
    
    enum FetchStories {
        struct Request { }
        struct Response {
            var stories: StoriesResponse
        }
        struct ViewModel {
            var storiesList: [StoryModel]
        }
    }
    
    enum FetchHubs {
        struct Request { }
        struct Response {
            var hubServices: HubResponse
        }
        struct ViewModel {
            var servicesList: [HubModel]
        }
    }
}

//MARK: StoryModel

struct StoryModel: Equatable {
    var isSeen: Bool = false
    let id: Int
    let title: String
    let url: String
}


//MARK: ProductType

enum ProductType: String, CaseIterable {
    case tariff = "Tarifler"
    case package = "Paketler"
}


extension ProductType {
    func getTitle() -> String {
        return self.rawValue
    }
    func getImage() -> UIImage? {
        switch self {
        case .tariff:
            AppAssets.tarifler.load()
        case .package:
            AppAssets.paketler.load()
        }
    }
}


//MARK: HubModel

public class HubModel: Object {
   @Persisted var title: String = ""
   @Persisted var id: Int = 0

   public convenience init(title: String, id: Int) {
       self.init()
       self.title = title
       self.id = id
   }
    static func == (lhs: HubModel, rhs: HubModel) -> Bool {
           return lhs.title == rhs.title
    }
}


extension HubModel {
    var image : UIImage? {
        switch self.id   {
        case 1:
            return AppAssets.sms.load()
        case 2:
            return AppAssets.balance_transfer.load()
        case 3:
            return AppAssets.vas.load()
        case 4:
            return AppAssets.simcard.load()
        case 5:
            return AppAssets.credit.load()
        default:
            return nil
        }
    }
    
}
